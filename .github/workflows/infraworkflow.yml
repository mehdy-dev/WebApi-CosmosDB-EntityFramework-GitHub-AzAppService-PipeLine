name: Create Azure Resources
on: 
    push:
        paths: 
        - 'ARM/**'
        - '.github/workflows/infraworkflow.yml'

env:
    AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID  }}    # set this to your Azure Subscription Id
    AZURE_RESOURCEGROUP_NAME: ${{ secrets.AZURE_RG_NAME  }}                        # set this to your preferred resource group name
    AZURE_WEBAPP_NAME:  ${{ secrets.AZURE_WEBAPP_NAME  }}                         # set this to your preferred web app name ->   
    ASP_NAME: ${{ secrets.AZURE_ASP_NAME  }}                   # for the farm to run   -> 
    CONTAINER_NAME: ${{ secrets.COSMOSDB_CONTAINER_NAME  }}                          # set this to your preferred 
    DATABASE_NAME: ${{ secrets.COSMOSDB_DB_NAME  }}                 # set this to your preferred 


permissions:
  id-token: write
  contents: read

jobs:
    build-and-deploy-to-dev:
      runs-on: ubuntu-latest
      steps:
                  
      # Please refer to https://github.com/Azure/login#configure-deployment-credentials for help on the Azure login action and setting up your secrets 
      # This template also deploys the resourcegroup and not only the resources within the resource group. For this to work, your service principal needs access on the subscription level. You can create the service principal through: 
      # az ad sp create-for-rbac --name "spname" --sdk-auth --role contributor --scopes /subscriptions/<subscription-id>
      # This example uses federated identity (OIDC) for authentication
      - name: Azure Login with Federated Identity
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      
      # Checkout
      - name: Checkout
        uses: actions/checkout@v2
        with:
          path: repo
          
      # Deployment of template    
      - name: Deploy ARM Template resources
        uses: azure/arm-deploy@v1
        with:
          # You can change these environment variables for your configuration:   AZURE_SUBSCRIPTION_ID
          scope: resourcegroup
          subscriptionId: ${{ env.AZURE_SUBSCRIPTION_ID }}
          resourceGroupName: ${{env.AZURE_RESOURCEGROUP_NAME}}
          region: westeurope # Set this to your target region
          template: repo/templates/azuredeploy.json  # Set this to the location of your template file
          parameters: repo/templates/azuredeploy.parameters.json  webappName=${{env.AZURE_WEBAPP_NAME}} aspName=${{env.ASP_NAME}} databaseName=${{env.DATABASE_NAME}} containerName=${{env.CONTAINER_NAME}}  # Set this to the location of your parameters file
 
#TODO: Once the infrastructure got created, download web app publish profile of the staging slot and add it as a secret to the repo. It will be used by the workflow.yml file. 