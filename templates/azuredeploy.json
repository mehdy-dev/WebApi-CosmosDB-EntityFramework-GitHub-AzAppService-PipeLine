{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {

        "webappName": {
            "type": "string",
            "metadata": {
                "description": "Name of your web app"
            }
        },
        "aspName": {
            "type": "string",
            "metadata": {
                "description": "Name of your app service plan"
            }
        },
        "aspSKU": {
            "type": "string",
            "metadata": {
                "description": "description"
            },
            "defaultValue": "B1"
        },
        "skuName": {
        "type": "string",
        "defaultValue": "S1",
        "allowedValues": [
            "F1",
            "B1",
            "B2",
            "B3",
            "S1",
            "S2",
            "S3",
            "P1v2",
            "P2v2",
            "P3v2",
            "P1v3",
            "P2v3",
            "P3v3"
        ],
        "metadata": {
            "description": "Describes plan's pricing tier and instance size. Check details at https://azure.microsoft.com/en-us/pricing/details/app-service/"
        }
        },
        "skuCapacity": {
        "type": "int",
        "defaultValue": 1,
        "minValue": 1,
        "metadata": {
            "description": "Describes plan's instance count"
        }
        },
        "accountName": {
            "type": "string",
            "defaultValue": "[format('cosmos-{0}', uniqueString(resourceGroup().id))]",
            "metadata": {
              "description": "Cosmos DB account name"
            }
          },
          "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
              "description": "Location for the Cosmos DB account."
            }
          },
          "databaseName": {
            "type": "string",
            "metadata": {
              "description": "The name for the SQL API database"
            }
          },
          "containerName": {
            "type": "string",
            "metadata": {
              "description": "The name for the SQL API container"
            }
          }
    },
    "functions": [],
    "resources": [
        {
            "name": "[parameters('webappName')]",
            "type": "Microsoft.Web/sites",
            "apiVersion": "2018-11-01",
            "location": "[resourceGroup().location]",
            "tags": {
                "[concat('hidden-related:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('aspName'))]": "Resource",
                "displayName": "[parameters('webappName')]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('aspName'))]"
            ],
            "properties": {
                "name": "[parameters('webappName')]",
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('aspName'))]"
            }
        },
        {
            "name": "[parameters('aspName')]",
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2018-02-01",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "[parameters('aspSKU')]",
                "capacity": 1
            },
            "tags": {
                "displayName": "[parameters('aspName')]"
            },
            "properties": {
                "name": "[parameters('aspName')]"
            }
        },
        {
            "apiVersion": "2020-06-01",
            "type": "Microsoft.Web/sites/slots",
            "name": "[concat(parameters('webappName'), '/', 'staging')]",
            "kind": "app",
            "location": "[resourceGroup().location]",
            "comments": "This specifies the web app slots.",
            "tags": {
                "displayName": "WebAppSlots"
            },
            "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('aspName'))]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/Sites', parameters('webappName'))]"
            ]
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts",
            "apiVersion": "2022-05-15",
            "name": "[toLower(parameters('accountName'))]",
            "location": "[parameters('location')]",
            "properties": {
              "enableFreeTier": true,
              "databaseAccountOfferType": "Standard",
              "consistencyPolicy": {
                "defaultConsistencyLevel": "Session"
              },
              "locations": [
                {
                  "locationName": "[parameters('location')]"
                }
              ]
            }
          },
          {
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
            "apiVersion": "2022-05-15",
            "name": "[format('{0}/{1}', toLower(parameters('accountName')), parameters('databaseName'))]",
            "properties": {
              "resource": {
                "id": "[parameters('databaseName')]"
              },
              "options": {
                "throughput": 1000
              }
            },
            "dependsOn": [
              "[resourceId('Microsoft.DocumentDB/databaseAccounts', toLower(parameters('accountName')))]"
            ]
          },
          {
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
            "apiVersion": "2022-05-15",
            "name": "[format('{0}/{1}/{2}', toLower(parameters('accountName')), parameters('databaseName'), parameters('containerName'))]",
            "properties": {
              "resource": {
                "id": "[parameters('containerName')]",
                "partitionKey": {
                  "paths": [
                    "/myPartitionKey"
                  ],
                  "kind": "Hash"
                },
                "indexingPolicy": {
                  "indexingMode": "consistent",
                  "includedPaths": [
                    {
                      "path": "/*"
                    }
                  ],
                  "excludedPaths": [
                    {
                      "path": "/_etag/?"
                    }
                  ]
                }
              }
            },
            "dependsOn": [
              "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', toLower(parameters('accountName')), parameters('databaseName'))]"
            ]
          }
    ],
    "outputs": {}
}